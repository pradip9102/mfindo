buildscript {
    ext {
        kotlin_version = '1.2.50'
        spring_boot_version = '2.0.3.RELEASE'
        ok_http_version = '3.10.0'
        retrofit_version = '2.4.0'
        rx_java_version = '2.1.6'
        google_map_version = '0.2.7'
        kotlin_logging_version = '1.4.6'
        spring_security_version = '5.0.6.RELEASE'
        gson_version = '2.8.5'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlin_version}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-kapt'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.vizurd.travel'
version = '0.0.1'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}


dependencies {
    def withoutJackson = {
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-annotations'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
    }

    compile("com.h2database:h2")
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.data:spring-data-rest-webmvc")
    compile("org.springframework.boot:spring-boot-starter-integration")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.security:spring-security-core:${spring_security_version}")
    compile("com.squareup.okhttp3:okhttp:${ok_http_version}")
    compile("com.squareup.okhttp3:logging-interceptor:${ok_http_version}")
    compile("com.squareup.retrofit2:retrofit:${retrofit_version}")
    compile("com.squareup.retrofit2:converter-gson:${retrofit_version}")
    compile("com.squareup.retrofit2:adapter-rxjava2:${retrofit_version}")
    compile("io.reactivex.rxjava2:rxjava:${rx_java_version}")
    compile("com.google.maps:google-maps-services:${google_map_version}")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile("com.google.code.gson:gson:${gson_version}")
    compile("io.github.microutils:kotlin-logging:${kotlin_logging_version}")
    runtime("org.springframework.boot:spring-boot-devtools")

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}
