buildscript {
    ext {
        kotlinVersion = '1.2.31'
        springBootVersion = '2.0.3.RELEASE'
        okHttpVersion = '3.10.0'
        retrofitVersion = '2.4.0'
        rxJavaVersion = '2.1.6'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-kapt'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.vizurd.travel'
version = '0.0.1'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}


dependencies {
//	compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.boot:spring-boot-starter-integration')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("com.squareup.okhttp3:okhttp:${okHttpVersion}")
    compile("com.squareup.okhttp3:logging-interceptor:${okHttpVersion}")
    compile("com.squareup.retrofit2:retrofit:${retrofitVersion}")
    compile("com.squareup.retrofit2:converter-gson:${retrofitVersion}")
    compile("com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}")
    compile("io.reactivex.rxjava2:rxjava:${rxJavaVersion}")
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile "io.github.microutils:kotlin-logging:1.4.6"
    runtime('org.springframework.boot:spring-boot-devtools')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}
